// Mocks generated by Mockito 5.0.7 from annotations
// in mister_delivery_flutter/test/modules/foods/domain/usecases/search_by_name_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mister_delivery_flutter/app/modules/foods/domain/entities/response/basic_food_entity.dart'
    as _i6;
import 'package:mister_delivery_flutter/app/modules/foods/domain/errors/errors.dart'
    as _i5;
import 'package:mister_delivery_flutter/app/modules/foods/domain/repositories/search_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [ISearchRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockISearchRepository extends _i1.Mock implements _i3.ISearchRepository {
  MockISearchRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.FailureFood, List<_i6.BasicFoodEntity>>>
      searchByName(String? searchName) => (super.noSuchMethod(
          Invocation.method(#searchByName, [searchName]),
          returnValue: Future<
                  _i2.Either<_i5.FailureFood, List<_i6.BasicFoodEntity>>>.value(
              _FakeEither<_i5.FailureFood, List<_i6.BasicFoodEntity>>())) as _i4
          .Future<_i2.Either<_i5.FailureFood, List<_i6.BasicFoodEntity>>>);
}
