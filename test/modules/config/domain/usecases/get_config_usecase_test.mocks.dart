// Mocks generated by Mockito 5.0.7 from annotations
// in mister_delivery_flutter/test/modules/config/domain/usecases/get_config_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mister_delivery_flutter/app/modules/config/domain/entities/config_entity.dart'
    as _i3;
import 'package:mister_delivery_flutter/app/modules/config/domain/errors/errors.dart'
    as _i6;
import 'package:mister_delivery_flutter/app/modules/config/domain/repositories/config_repository.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [ConfigEntity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigEntity extends _i1.Mock implements _i3.ConfigEntity {
  MockConfigEntity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get logo =>
      (super.noSuchMethod(Invocation.getter(#logo), returnValue: '') as String);
  @override
  String get name =>
      (super.noSuchMethod(Invocation.getter(#name), returnValue: '') as String);
  @override
  String get description =>
      (super.noSuchMethod(Invocation.getter(#description), returnValue: '')
          as String);
  @override
  String get address =>
      (super.noSuchMethod(Invocation.getter(#address), returnValue: '')
          as String);
}

/// A class which mocks [IConfigRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIConfigRepository extends _i1.Mock implements _i4.IConfigRepository {
  MockIConfigRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.FailureGetConfig, _i3.ConfigEntity>> getConfig() =>
      (super.noSuchMethod(Invocation.method(#getConfig, []),
          returnValue:
              Future<_i2.Either<_i6.FailureGetConfig, _i3.ConfigEntity>>.value(
                  _FakeEither<_i6.FailureGetConfig, _i3.ConfigEntity>())) as _i5
          .Future<_i2.Either<_i6.FailureGetConfig, _i3.ConfigEntity>>);
}
